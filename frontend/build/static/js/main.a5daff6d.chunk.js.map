{"version":3,"sources":["reportWebVitals.js","components/ButtonContainer.js","components/Appbar.js","components/ScanTable.js","components/QRScanner.js","routes/CreateQRcode.js","components/Home.js","components/FindProduct.js","components/PrintCard.js","components/FileUpload.js","components/DisplayCard.js","components/Lookup.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ButtonContainer","history","useNavigate","handleButtonClick","link","Stack","className","direction","spacing","Button","onClick","variant","startIcon","ButtonAppBar","Box","sx","flexGrow","AppBar","position","Toolbar","href","color","disableRipple","disableElevation","style","backgroundColor","fontSize","TablePaginationActions","props","theme","useTheme","count","page","rowsPerPage","onPageChange","flexShrink","ml","IconButton","event","disabled","Math","ceil","max","BasicTable","total_scans","React","setPage","setRowsPerPage","emptyRows","length","TableContainer","component","Paper","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","slice","map","values","index","border","scope","qr_code_key","experiment_id","contents","analyst","storage_condition","date_entered","expiration_date","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","label","value","SelectProps","inputProps","native","newPage","onRowsPerPageChange","parseInt","target","ActionsComponent","modifyToJSON","message","replace","JSON","parse","QRScanner","useState","qrScan","setQrScan","setTotal_scans","setMessage","severity","setSeverity","changeDisplayMessage","setTimeout","useEffect","sendInfoToFlask","a","obj","axios","post","mes","console","log","data","resJSON","new_scanned_item","splice","mt","mb","visibility","Alert","minHeight","display","flexDirection","justifyContent","alignItems","delay","onError","e","error","onScan","responseJSON","width","borderRadius","sizes","CreateQRcode","setAnalyst","Date","expiry","setExpiry","setContents","experimentId","setExperimentId","storageCondition","setStorageCondition","size","setSize","setTrueSize","qr","setQR","dateEntered","setDateEntered","dateModified","setDateModified","base64Encoding","setBase64Encoding","dateToString","dateObj","String","getMonth","padStart","getDate","getFullYear","printImg","size_string","substring","get","sendQRCode","date_modified","res","mx","TextField","required","onChange","id","margin","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","renderInput","params","d","i","textTransform","alt","src","Home","FindProduct","camRef","useRef","capture","useCallback","imgSrc","current","getScreenshot","formData","FormData","append","audio","screenshotFormat","videoConstraints","aspectRatio","ref","preventDefault","PrintCard","qr_key","padding","justifyItems","FormControl","InputLabel","Select","MenuItem","newLableData","Object","keys","labelData","filter","key","reduce","setLabelData","removePrintCard","FileUpload","file","setFile","handleFileSubmit","type","files","handleFileChange","flex","entries","DisplayCard","LookUp","qrCode","setQrCode","setLabel","focused","fullWidth","placeholder","createTheme","palette","primary","main","secondary","typography","fontFamily","h4","fontWeight","button","ReactDOM","render","ThemeProvider","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.a5daff6d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { Stack } from \"@mui/material\";\nimport { Button } from \"@mui/material\";\nimport QrCodeScannerIcon from \"@mui/icons-material/QrCodeScanner\";\nimport QrCodeIcon from \"@mui/icons-material/QrCode\";\nimport ImageSearchIcon from \"@mui/icons-material/ImageSearch\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction ButtonContainer() {\n  let history = useNavigate();\n\n  function handleButtonClick(link) {\n    history(link);\n  }\n\n  return (\n    <>\n      <Stack className=\"button-grp\" direction=\"row\" spacing={2}>\n        <Button\n          onClick={() => {handleButtonClick('/QRScanner')}}\n          variant=\"contained\"\n          startIcon={<QrCodeScannerIcon />}\n        >\n          Scan Tag\n        </Button>\n        <Button\n          onClick={() => {handleButtonClick('/create/qr_code')}}\n          variant=\"contained\"\n          startIcon={<QrCodeIcon />}\n        >\n          Create QR Code\n        </Button>\n        <Button\n          onClick={() => {handleButtonClick('/csv_upload')}}\n          variant=\"contained\"\n          startIcon={<ImageSearchIcon />}\n        >\n          Upload CSV\n        </Button>\n        <Button\n          onClick={() => {handleButtonClick('/lookup')}}\n          variant=\"contained\"\n          startIcon={<ImageSearchIcon />}\n        >\n          Key Look-up\n        </Button>\n      </Stack>\n    </>\n  );\n}\nexport default ButtonContainer;\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport '../App.css'; \n\n\nimport Button from \"@mui/material/Button\";\nimport ButtonContainer from \"./ButtonContainer\";\n\nexport default function ButtonAppBar() {\n  return (\n    <div className=\"appBar\">\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Button\n              href=\"/\"\n              color=\"inherit\"\n              disableRipple\n              disableElevation\n              sx={{ flexGrow: 1 }}\n              style={{ backgroundColor: \"transparent\",fontSize: 20 }}\n            >\n              MERCK QR\n            </Button>\n\n            <Button\n              href=\"/\"\n              color=\"inherit\"\n              disableRipple\n              disableElevation\n              style={{ backgroundColor: \"transparent\" }}\n            >\n              Home\n            </Button>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      <br />\n      <ButtonContainer />\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\n\nfunction TablePaginationActions(props) {\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onPageChange } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </Box>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction BasicTable(props) {\n  let total_scans = props.total_scans\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - total_scans.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>QR Code Key</TableCell>\n            <TableCell align=\"center\">Experiment ID</TableCell>\n            <TableCell align=\"center\">Contents</TableCell>\n            <TableCell align=\"center\">Analyst</TableCell>\n            <TableCell align=\"center\">Storage Cond.</TableCell>\n            <TableCell align=\"center\">Date Entered</TableCell>\n            <TableCell align=\"center\">Expiration Date</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {total_scans? \n          (rowsPerPage > 0\n            ? total_scans.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : total_scans\n          ).map((values,index) => (\n            <TableRow\n            key={index}\n            sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n          >\n            <TableCell component=\"th\" scope=\"row\">\n              {values.qr_code_key}\n            </TableCell>\n            <TableCell align=\"center\">{values.experiment_id}</TableCell>\n            <TableCell align=\"center\">{values.contents}</TableCell>\n            <TableCell align=\"center\">{values.analyst}</TableCell>\n            <TableCell align=\"center\">{values.storage_condition}</TableCell>\n            <TableCell align=\"center\">{values.date_entered}</TableCell>\n            <TableCell align=\"center\">{values.expiration_date}</TableCell>\n          </TableRow>\n          )):\"\"}\n\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n              colSpan={3}\n              count={total_scans.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: {\n                  'aria-label': 'rows per page',\n                },\n                native: true,\n              }}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default BasicTable;\n","import { Box } from \"@mui/system\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport QRScan from \"react-qr-reader\";\nimport BasicTable from \"./ScanTable\";\nimport { Alert } from \"@mui/material\";\n\nfunction QRScanner() {\n  const [qrScan, setQrScan] = useState(\"\");\n  const [total_scans, setTotal_scans] = useState([]);\n  const [message, setMessage] = useState(false);\n  const [severity, setSeverity] = useState(\"success\")\n  \n\n  const handleScan = (data) => {\n    if (data) {\n      console.log(data);\n      let responseJSON = modifyToJSON(data);\n      setQrScan(responseJSON[\"qr_code_key\"]);\n    }\n  };\n  const handleError = (e) => {\n    console.error(e);\n  };\n\n  const changeDisplayMessage = (message, severity) => {\n    setMessage(message);\n    setSeverity(severity)\n    setTimeout(() => {\n        setSeverity(\"success\");\n        setMessage(\"\");\n    }, 1000);\n  }\n\n  useEffect(() => {\n    if (qrScan) {\n      async function sendInfoToFlask() {\n        let obj = {\n          qr_code_key: qrScan,\n        };\n        try {\n          //post request to our backend\n          let mes = await axios.post(\"http://localhost:5000/scan/qr_code\", obj);\n          console.log(mes.data)\n          let resJSON= mes.data;\n          \n          const new_scanned_item = {\n            qr_code_key: resJSON.qr_code_key,\n            experiment_id: resJSON.experiment_id,\n            contents: resJSON.contents,\n            analyst: resJSON.analyst,\n            storage_condition: resJSON.storage_condition,\n            date_entered: resJSON.date_entered,\n            expiration_date: resJSON.expiration_date,\n          }\n          total_scans.splice(0, 0, new_scanned_item)\n          setTotal_scans(total_scans)\n          \n          changeDisplayMessage(`Successfully printed QRCode label: ${qrScan}`, \"success\")\n          \n        } catch (e) {\n          changeDisplayMessage(\"An error has occured. Please try again.\", \"error\")\n          console.log(e);\n        }\n      }\n      sendInfoToFlask();\n    }\n  }, [qrScan, total_scans]);\n\n  return (\n    <>\n      <Box mt={5} mb={5} sx={{visibility: message?'visible':'hidden'}}>\n        <Alert severity={severity} style={{ fontSize: \"20px\", minHeight:\"2.2em\"}}>\n            {message}\n        </Alert>\n      </Box>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <h1>Qr Scanner</h1>\n        <div>\n          <QRScan\n            delay={300}\n            onError={handleError}\n            onScan={handleScan}\n            style={{ height: 240, width: 320, borderRadius: 5 }}\n          />\n        </div>\n        <Box sx={{ mt: 12 }}>\n          <BasicTable total_scans={total_scans}/>\n        </Box>\n      </div>\n    </>\n  );\n}\n\nconst modifyToJSON = (message) => {\n  message = message.replace(/'/g, '\"');\n  let responseJSON = JSON.parse(message);\n  return responseJSON;\n};\n\nexport default QRScanner;\n","import { useState} from \"react\";\nimport { Stack, TextField, Alert, Box} from \"@mui/material\";\nimport { Button } from \"@mui/material\";\nimport axios from \"axios\";\nimport DatePicker from \"@mui/lab/DatePicker\";\n\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\n// analyst, expiry, contents, experimentId, storageCondition, size\n\nconst sizes = [\"2mL\", \"2.5mL\", \"4mL\", \"20mL\"];\n\nfunction CreateQRcode() {\n  const [analyst, setAnalyst] = useState(\"\");\n  const [expiry, setExpiry] = useState(new Date());\n  const [contents, setContents] = useState(\"\");\n  const [experimentId, setExperimentId] = useState(\"\");\n  const [storageCondition, setStorageCondition] = useState(\"\");\n  const [size, setSize] = useState(sizes[0]);\n  const [trueSize, setTrueSize] = useState(size);\n  const [qr, setQR] = useState(\"\");\n  const [dateEntered, setDateEntered] = useState(new Date());\n  const [dateModified, setDateModified] = useState(new Date());\n  const [base64Encoding, setBase64Encoding] = useState(\"\");\n  const [message, setMessage] = useState(false);\n  const [severity, setSeverity] = useState(\"success\")\n\n  const dateToString = (dateObj) =>\n    `${String(dateObj.getMonth() + 1).padStart(2, \"0\")}/${String(\n      dateObj.getDate()\n    ).padStart(2, \"0\")}/${dateObj.getFullYear()}`;\n\n  const handleChangeAnalyst = (e) => {\n    setAnalyst(e.target.value);\n  };\n\n  const handleChangeDateEntered = (e) => {\n    setDateEntered(e);\n  };\n\n  const handleChangeDateModified = (e) => {\n    setDateModified(e);\n  };\n\n  const handleChangeExpiry = (e) => {\n    setExpiry(e);\n  };\n\n  const handleChangeContents = (e) => {\n    setContents(e.target.value);\n  };\n  const handleChangeStorageCondition = (e) => {\n    setStorageCondition(e.target.value);\n  };\n\n  const handleChangeExperiment = (e) => {\n    setExperimentId(e.target.value);\n  };\n\n  const changeDisplayMessage = (message, severity) => {\n    setMessage(message);\n    setSeverity(severity)\n    setTimeout(() => {\n        setSeverity(\"success\");\n        setMessage(\"\");\n    }, 1000);\n}\n\n  const printImg = async () => {\n    let size_string = size.substring(0, size.length - 2)\n    try{\n      await axios.get(`http://localhost:5000/print/${qr}?size=${size_string}`);\n      changeDisplayMessage(\"Successfully printed QRCode\", \"success\")\n    } catch(e){\n        changeDisplayMessage(\"An error has occured. Please try again.\", \"error\")\n        console.log(e);\n    }\n  };\n\n  const sendQRCode = async () => {\n    try {\n      let obj = {\n        experiment_id: experimentId,\n        analyst: analyst,\n        expiration_date: dateToString(expiry),\n        date_modified: dateToString(dateModified),\n        date_entered: dateToString(dateEntered),\n        contents: contents,\n        storage_condition: storageCondition,\n        size: size,\n      };\n      let res = await axios.post(\"http://localhost:5000/create/qr_code\", obj);\n      setQR(res.data[\"qr_code_key\"]);\n      setTrueSize(size);\n      setExperimentId(\"\");\n      setAnalyst(\"\");\n      setExpiry(new Date());\n      setDateEntered(new Date());\n      setDateModified(new Date());\n      setContents(\"\");\n      setStorageCondition(\"\");\n      setBase64Encoding(res.data[\"image_string\"])\n      setMessage(\"Successfully created QRCode\");\n      setTimeout(() => {\n        setMessage(\"\");\n    },1000);\n    } catch (e) {\n          setSeverity(\"error\");\n          setMessage(\"An error has occured. Please try again.\");\n            setTimeout(() => {\n                setSeverity(\"success\");\n                setMessage(\"\");\n            }, 1000);\n      console.log(e);\n    }\n  };\n\n  return (\n    <>\n      <Box mt={5} mb={5} sx={{visibility: message?'visible':'hidden'}}>\n        <Alert severity={severity} style={{ fontSize: \"20px\", minHeight:\"2.2em\"}}>\n            {message}\n        </Alert>\n      </Box>\n\n      <Stack width={\"100vw\"} mx={2} spacing={2} mt={2} direction=\"row\">\n        <Stack width={\"45vw\"} spacing={2}>\n          <TextField\n            required\n            label=\"Experiment ID\"\n            value={experimentId}\n            onChange={handleChangeExperiment}\n            id=\"outline-required\"\n            variant=\"filled\"\n            margin=\"dense\"\n          />\n          <TextField\n            required\n            id=\"outlined-required\"\n            label=\"Storage Condition\"\n            value={storageCondition}\n            onChange={handleChangeStorageCondition}\n            margin=\"dense\"\n            variant=\"filled\"\n          />\n          <TextField\n            required\n            id=\"outlined-required\"\n            label=\"Contents\"\n            value={contents}\n            onChange={handleChangeContents}\n            margin=\"dense\"\n            variant=\"filled\"\n          />\n          <TextField\n            required\n            id=\"outlined-required\"\n            label=\"Analyst\"\n            value={analyst}\n            onChange={handleChangeAnalyst}\n            margin=\"dense\"\n            variant=\"filled\"\n          />\n\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <DatePicker\n              label=\"Date Entered\"\n              value={dateEntered}\n              onChange={handleChangeDateEntered}\n              renderInput={(params) => (\n                <TextField\n                  id=\"outlined-required\"\n                  margin=\"dense\"\n                  variant=\"filled\"\n                  required\n                  {...params}\n                />\n              )}\n            />\n            <DatePicker\n              label=\"Expiry\"\n              value={expiry}\n              onChange={handleChangeExpiry}\n              renderInput={(params) => (\n                <TextField\n                  id=\"outlined-required\"\n                  margin=\"dense\"\n                  variant=\"filled\"\n                  required\n                  {...params}\n                />\n              )}\n            />\n\n            <DatePicker\n              label=\"Date Modified\"\n              value={dateModified}\n              onChange={handleChangeDateModified}\n              renderInput={(params) => (\n                <TextField\n                  id=\"outlined-required\"\n                  margin=\"dense\"\n                  variant=\"filled\"\n                  required\n                  {...params}\n                />\n              )}\n            />\n          </LocalizationProvider>\n\n          <Stack spacing={2} direction={\"row\"}>\n            {sizes.map((d, i) => {\n              return (\n                <Button\n                  variant={size === d ? \"contained\" : \"outlined\"}\n                  onClick={() => {\n                    setSize(d);\n                  }}\n                  sx={{ textTransform: \"none\" }}\n                  key={i}\n                >\n                  {d}\n                </Button>\n              );\n            })}\n          </Stack>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            disabled={\n              experimentId &&\n              analyst &&\n              expiry &&\n              dateModified &&\n              dateEntered &&\n              contents &&\n              storageCondition\n                ? false\n                : true\n            }\n            onClick={() => {\n              sendQRCode();\n            }}\n          >\n            Create\n          </Button>\n        </Stack>\n        <Stack alignItems={\"center\"} width={\"45vw\"} justifyContent={\"center\"}\n        sx={{backgroundColor:'#D9EAF7'}}>\n          {qr ? (\n            <div>\n              <h1>QR code Key: <span style={{color:'#007A73'}}>{qr}</span></h1>\n              <img\n                alt=\"Generated QR Code\"\n                src={base64Encoding?`data:image/png;base64,${base64Encoding}`:''}\n              />\n            </div>\n          ) : (\n            \"\"\n          )}\n          {qr ? <Button\n              size=\"large\"\n              sx={{mt:'1.0em'}}\n              variant=\"contained\"\n              onClick={() => {\n                printImg();\n              }}\n            >\n              Print\n            </Button>: (\n            \"\"\n          )}\n        </Stack>\n      </Stack>\n    </>\n  );\n}\n\nexport default CreateQRcode;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport '../App.css'; \n\nfunction Home() {\n\n  return (\n    <Box\n    display=\"flex\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    minHeight=\"60vh\"\n    >\n      <Box sx={{display:'flex', flexDirection:'column', justifyContent:'flex-start'}}>\n        <h1 style={{color:'#007A73', fontSize:'4em'}}\n        className=\"merckLogo\"\n        >Merck QR Scanner</h1>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Home;\n","import {\n  Stack,\n  Paper,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  IconButton,\n} from \"@mui/material\";\nimport Webcam from \"react-webcam\";\nimport PhotoCameraIcon from \"@mui/icons-material/PhotoCamera\";\nimport { useCallback, useRef } from \"react\";\nimport axios from \"axios\";\n\nexport const FindProduct = () => {\n  const camRef = useRef(null);\n\n  const capture = useCallback( async () => {\n    if (camRef) {\n      const imgSrc = camRef.current.getScreenshot();\n      const formData = new FormData();\n      formData.append(\"file\", imgSrc);\n      try {\n        const res = await axios.post(\"http://localhost:5000/upload/label_image\", formData);\n        console.log(res.data);\n      } catch {\n        console.log(\"error in submission\");\n      }\n    }\n  }, [camRef]);\n\n  return (\n    <Stack\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n      height={\"60vh\"}\n      spacing={2}\n    >\n      <Stack direction={\"row\"} justifyContent={\"space-around\"} width={\"100vw\"}>\n        <Stack alignItems=\"center\" spacing={2}>\n          <Webcam\n            audio={false}\n            screenshotFormat=\"image/jpeg\"\n            videoConstraints={{ width: { max: 500 }, aspectRatio: 2 }}\n            ref={camRef}\n          />\n          <IconButton\n            color=\"primary\"\n            onClick={(e) => {\n              e.preventDefault();\n              capture();\n            }}\n          >\n            <PhotoCameraIcon />\n          </IconButton>\n        </Stack>\n        <h4>Hello From the other side</h4>\n      </Stack>\n      <TableContainer sx={{ width: \"20vw\" }} component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Product Name</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow\n              key={1}\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                Ibuprofen\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Stack>\n  );\n};\n","import React, {useState} from \"react\";\nimport {Button, Box } from \"@mui/material\";\nimport axios from 'axios'\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nexport const PrintCard = (props) => {\n    const [size, setSize] = useState('2ml');\n\n    const handleChange = (event) => {\n        setSize(event.target.value);\n    };\n\n\n    const printImg = async () => {\n        try{\n            await axios.get(`http://localhost:5000/print/${props.qr_key}?size=${size}`);\n        }catch(e){\n            props.changeDisplayMessage(`Error occured when priting QRCode Label: ${props.qr_key}`, \"error\")\n        }\n      };\n\n    const removePrintCard = () => {\n        let newLableData = Object.keys(props.labelData).filter(key =>\n            key !== props.qr_key).reduce((obj, key) =>\n            {\n                obj[key] = props.labelData[key];\n                return obj;\n            }, {}\n        );\n        props.changeDisplayMessage(`Successfully removed QRCode Label: ${props.qr_key}`, \"success\")\n        props.setLabelData(newLableData)\n    }\n\n\nreturn (\n    <Box sx={{ display: 'flex', flexDirection:'column', \n    justifyContent: 'space-evenly', backgroundColor:'#D9EAF7', padding:'1.0em',mb:'1.5em' }}>\n        <h1>QRCode Key is: <span style={{color:'#007A73'}}>{props.qr_key}</span></h1>\n        <Box sx={{ display: 'flex', flexDirection:'row', alignItems: 'center',\n        justifyContent: 'space-evenly'}}>\n            <img\n            alt=\"Generated QR Code\"\n            src={`data:image/png;base64,${props.base64Encoding}`}\n            />\n            <Box sx={{ display: 'flex', flexDirection:'column', alignItems: 'center',\n        justifyItems: 'space-between'}}>\n                <Button variant=\"contained\" sx={{mb:'1.0em'}} size=\"large\"\n                onClick={() => {printImg()}}>\n                        Print\n                </Button>\n                <FormControl sx={{mb:'1.0em'}}>\n                    <InputLabel id=\"demo-simple-select-label\">Size</InputLabel>\n                    <Select\n                    value={size}\n                    onChange={handleChange}\n                    >\n                    <MenuItem value={\"2ml\"}>2ml</MenuItem>\n                    <MenuItem value={\"2.5ml\"}>2.5ml</MenuItem>\n                    <MenuItem value={\"4ml\"}>4ml</MenuItem>\n                    <MenuItem value={\"20ml\"}>20ml</MenuItem>\n                    </Select>\n                </FormControl>\n                <Button variant=\"contained\" sx={{mb:'1.0em', backgroundColor:\"red\"}} size=\"large\"\n                onClick={() => {removePrintCard()}}>\n                        Remove\n                </Button>\n            </Box>\n        </Box>\n    </Box>\n);\n}\n\nexport default PrintCard","import React, { useState} from \"react\";\nimport axios from \"axios\";\nimport { Alert, Button, Box } from \"@mui/material\";\nimport UploadIcon from \"@mui/icons-material/Upload\";\nimport PrintCard from \"./PrintCard\";\n\nconst FileUpload = () => {\n    const [file, setFile] = useState(null);\n    const [message, setMessage] = useState(false);\n    const [labelData, setLabelData] = useState([])\n    const [severity, setSeverity] = useState(\"success\")\n    const handleFileChange = (e) => {\n        e.preventDefault();\n        setFile(e.target.files[0]);\n    };\n\n    const changeDisplayMessage = (message, severity) => {\n            setMessage(message);\n            setSeverity(severity)\n            setTimeout(() => {\n                setSeverity(\"success\");\n                setMessage(\"\");\n            }, 1000);\n    }\n\n    const handleFileSubmit = async (e) => {\n        e.preventDefault();\n        let formData = new FormData();\n        formData.append(\"csv\", file);\n        try {\n            let res = await axios.post(\"http://localhost:5000/csv\", formData);\n            let data = res.data\n            setMessage(data[\"message\"]);\n            delete data[\"message\"]\n            setLabelData(data)\n            setTimeout(() => {\n              setMessage(\"\");\n          }, 2000);\n        } catch {\n            changeDisplayMessage(\"An error has occured. Please try again.\", \"error\")\n            console.log(e);\n        }\n    };\n\n    return (\n    <Box>\n        <Box mt={5} mb={5} sx={{visibility: message?'visible':'hidden'}}>\n            <Alert severity={severity} style={{ fontSize: \"20px\", minHeight:\"2.2em\"}}>\n                {message}\n            </Alert>\n        </Box>\n\n        <Box sx={{display: 'flex', flexDirection:'row', alignItems:'flex-start', justifyContent:'center',\n    mt:'1.5em', mb:'1.5em'}}>\n            <input type=\"file\" onChange={(e) => handleFileChange(e)} />\n            <Button\n            disabled={file ? false : true}\n            variant=\"contained\"\n            startIcon={<UploadIcon />}\n            onClick={(e) => handleFileSubmit(e)}\n            >\n            Upload\n            </Button>\n        </Box>\n        <div style={{flex:true, flexDirection:\"row\"}}>\n            {labelData? Object.entries(labelData).map(([key, value]) => {\n                return <PrintCard base64Encoding={value} qr_key={key} key={key} labelData={labelData} \n                setLabelData={setLabelData} changeDisplayMessage={changeDisplayMessage}/>\n            }\n            ):''}\n        </div>\n    </Box>\n    )\n}\n\nexport default FileUpload\n","import React, {useState} from \"react\";\nimport {Button, Box } from \"@mui/material\";\nimport axios from 'axios'\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nexport const DisplayCard = (props) => {\n    const [size, setSize] = useState('2ml');\n\n    const handleChange = (event) => {\n        setSize(event.target.value);\n    };\n\n\n    const printImg = async () => {\n        try{\n            let res = await axios.get(`http://localhost:5000/print/${props.qr_key}?size=${size}`);\n        console.log(res)\n        }catch(e){\n            props.changeDisplayMessage(`Error occured when priting QRCode Label: ${props.qr_key}`, \"error\")\n        }\n      };\n\nreturn (\n    <Box sx={{ display: 'flex', flexDirection:'column', \n    justifyContent: 'space-evenly', backgroundColor:'#D9EAF7', padding:'1.0em',mb:'1.5em', mt:'2em' }}>\n        <h1>QRCode Key is: <span style={{color:'#007A73'}}>{props.qr_key}</span></h1>\n        <Box sx={{ display: 'flex', flexDirection:'row', alignItems: 'center',\n        justifyContent: 'space-evenly'}}>\n            <img\n            alt=\"Generated QR Code\"\n            src={`data:image/png;base64,${props.base64Encoding}`}\n            />\n            <Box sx={{ display: 'flex', flexDirection:'column', alignItems: 'center',\n        justifyItems: 'space-between'}}>\n                <Button variant=\"contained\" sx={{mb:'10px'}} size=\"large\"\n                onClick={() => {printImg()}}>\n                        Print\n                </Button>\n                <FormControl sx={{mt:'10px'}}>\n                    <InputLabel>Size</InputLabel>\n                    <Select\n                    value={size}\n                    onChange={handleChange}\n                    >\n                        <MenuItem value={\"2ml\"}>2ml</MenuItem>\n                        <MenuItem value={\"2.5ml\"}>2.5ml</MenuItem>\n                        <MenuItem value={\"4ml\"}>4ml</MenuItem>\n                        <MenuItem value={\"20ml\"}>20ml</MenuItem>\n                    </Select>\n                </FormControl>\n            </Box>\n        </Box>\n    </Box>\n);\n}\n\nexport default DisplayCard","import {Box, TextField, Button} from \"@material-ui/core\";\nimport { Alert } from \"@mui/material\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport DisplayCard from \"./DisplayCard\";\n\nconst LookUp = () => {\n    const [qrCode, setQrCode] = useState(\"\");\n    const [message, setMessage] = useState(false);\n    const [severity, setSeverity] = useState(\"success\")\n    const [label, setLabel] = useState(\"\")\n\n\n    const handleQrCodeChange = (e) => {\n        setQrCode(e.target.value)\n    }\n\n    const changeDisplayMessage = (message, severity) => {\n        setMessage(message);\n        setSeverity(severity)\n        setTimeout(() => {\n            setSeverity(\"success\");\n            setMessage(\"\");\n        }, 1000);\n      }\n\n    const handleButtonClick = async () => {\n        try{\n            let res = await axios.get(`http://localhost:5000/asset/${qrCode}`)\n            console.log(res.data['image'])\n            setLabel(res.data['image'])\n            changeDisplayMessage(`Successfully looked up label of: ${qrCode}`, \"success\")\n        }catch(e){\n            changeDisplayMessage(\"Error: Non-existing QRCODE Key. Please try again\", \"error\")\n            console.log(e)\n        }\n    }\n\n    return (\n        <Box>\n            <Box mt={5} mb={5} sx={{visibility: message?'visible':'hidden'}}>\n                <Alert severity={severity} style={{ fontSize: \"20px\", minHeight:\"2.2em\"}}>\n                    {message}\n                </Alert>\n            </Box>\n            <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            >\n        <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        width=\"40vw\"\n        >\n            <TextField  variant=\"outlined\" label=\"QR Code\" focused fullWidth size=\"medium\"\n            value={qrCode} placeholder=\"Enter QR Code\"\n            onChange={handleQrCodeChange}/>\n        </Box>\n        <Button sx={{ml:\"10px\"}}\n        onClick={() => {handleButtonClick()}}>\n            Search\n        </Button>\n    </Box>\n        {label? \n        <DisplayCard qr_key={qrCode} base64Encoding={label} changeDisplayMessage={changeDisplayMessage}/>:\"\"}\n</Box>\n    )\n}\n\nexport default LookUp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppBar from './components/Appbar'\nimport QRScanner from \"./components/QRScanner\";\nimport CreateQRcode from \"./routes/CreateQRcode\";\nimport Home from \"./components/Home\";\nimport { FindProduct } from \"./components/FindProduct\";\nimport FileUpload from \"./components/FileUpload\";\nimport LookUp from \"./components/Lookup\";\nimport { Routes, Route} from \"react-router\";\n\nconst font = \"'Lato', sans-serif\";\n\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#007a73',\n    },\n    secondary: {\n      main: '#231f20',\n    },\n  },\n  typography: {\n    fontFamily: font,\n    h4:{\n      fontWeight: 700,\n    },\n    button:{\n      fontWeight: 600,\n    },\n  },\n});\n\nReactDOM.render(\n<ThemeProvider theme={theme}>\n    <BrowserRouter>\n            <AppBar />\n            <Routes>\n                <Route path=\"/QRScanner\" element={<QRScanner />} />\n                <Route path=\"/create/qr_code\" element={<CreateQRcode />} />\n                <Route path=\"/findProduct\" element={<FindProduct />} />\n                <Route path=\"/csv_upload\" element={<FileUpload />} />\n                <Route path=\"/lookup\" element={<LookUp />} />\n                <Route path=\"/\" element={<Home />} />\n            </Routes>\n    </BrowserRouter>\n  </ThemeProvider>,document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}